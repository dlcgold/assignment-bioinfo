var searchIndex = JSON.parse('{\
"esbio":{"doc":"Assignment 1 Bioinformatica, Davide Cozzi, 829827","t":[5,5,5,5,3,11,11,11,11,11,11,11,11,11,11,5,5,3,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["splitter","check_virus","check_virus2","get_kmers_unique","Dbg","new","new_single","eulerian_trail","get_superstring","nodes","nstart","edges","node_edge_map","eulerian_path","to_dot","check_manhattan","lcs","Mutation","new","ibase","fbase","index","check_mutations","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","fmt"],"q":["esbio","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Funzione per la creazione dei token.","Funzione per la versione 1 del controllo delle mutazioni, …","Funzione per la versione 2 del controllo delle mutazioni, …","Funzione per la creazione del kmer-set a partire da un …","Struct per rappresentare un grafo di De Bruijn.","Metodo per la creazione di un grafo di De bruijn a …","Metodo per la creazione di un grafo di De bruijn a …","Metodo per il calcolo del cammino Euleriano","Metodo per l’ottenimento della possibile superstringa a …","Metodo getter per i nodi","Metodo getter per i nodi di partenza","Metodo getter per gli archi","Metodo getter per la mappa dei nodi di adiacebza","Metodo getter per il cammino Euleriano","Metodo per la stampa del grafo in formato DOT","Funzione per il controllo della distanza di Hamming …","Funzione per il calcolo della longest common substring …","Struct per rappresentare una mutazione.","Metodo di creazione di una mutazione","Metodo getter per la prima base della mutazione","Metodo getter per la seconda base della mutazione","Metodo getter per l’indice della mutazione","Funzione per il controllo di mutazione dell’esercizio 2","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,2,2,2,2,0,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2],"f":[[[["string",3]],[["vec",3],["string",3]]],[[["string",3]],["bool",15]],[[["string",3]],["bool",15]],[[["vec",3],["i32",15]],[["vec",3],["string",3]]],null,[[["vec",3],["string",3],["i32",15]],["dbg",3]],[[["i32",15],["string",3]],["dbg",3]],[[],[["vec",3],["string",3]]],[[],["string",3]],[[],["hashset",3]],[[],["vec",3]],[[],["vec",3]],[[],["hashmap",3]],[[],["vec",3]],[[["string",3]]],[[["i32",15],["string",3]],["i32",15]],[[["string",3]],["string",3]],null,[[["usize",15],["char",15]]],[[],["char",15]],[[],["char",15]],[[],["usize",15]],[[["i32",15],["string",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]]],"p":[[3,"Dbg"],[3,"Mutation"]]}\
}');
initSearch(searchIndex);